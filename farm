#!/usr/bin/env python
import boto3
import argparse

def info_text():
  with open('./info.txt') as info_file:
    info = info_file.read()
  return info


if __name__ == '__main__':
  parser = argparse.ArgumentParser(
      description="Set up and run a single use render farm for Blender on AWS.",
      epilog=info_text(),
      formatter_class=argparse.RawDescriptionHelpFormatter
    )
  main_group = parser.add_argument_group()
  main_group.add_argument("-p", "--project_file",
    help="the project filename or filepath",
    default="example/project.yaml")
  project_actions_group = parser.add_mutually_exclusive_group()
  project_actions_group.add_argument("-s", "--stop",
      help="stop the EC2 servers and place the farm in a stopped state",
      action="store_true"
    )
  project_actions_group.add_argument("-r", "--restart",
      help="restart the EC2 servers and place the farm in a running state",
      action= "store_true"
    )
  project_actions_group.add_argument("-k", "--kill",
      help="stop the EC2 servers if running and tear down the stack - INCLUDING THE RENDER OUTPUT BUCKET!",
      action= "store_true"
    )
  create_ami_group = parser.add_mutually_exclusive_group()
  create_ami_group.add_argument("-c", "--create-ami",
      help="create the Amazon Machine Image for your farm",
      action="store_true")
  delete_ami_group = parser.add_mutually_exclusive_group()
  delete_ami_group.add_argument("-d", "--delete-ami",
      help="delete the specified Amazon Machine Image id, or the id in the project file",
      action="store_true",
      default="USE_PROJECTFILR")


  args = parser.parse_args()
